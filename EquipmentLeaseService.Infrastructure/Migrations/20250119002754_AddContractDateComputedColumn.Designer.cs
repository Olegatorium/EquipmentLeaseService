// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquipmentLeaseService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250119002754_AddContractDateComputedColumn")]
    partial class AddContractDateComputedColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.Property<Guid>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessEquipmentTypeCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionFacilityCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContractId");

                    b.HasIndex("ProcessEquipmentTypeCode");

                    b.HasIndex("ProductionFacilityCode");

                    b.ToTable("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ProcessEquipmentTypes");

                    b.HasData(
                        new
                        {
                            Code = new Guid("ba4e0fa6-1d11-4059-94df-2aeb60899022"),
                            Area = 120m,
                            Name = "CNC Machine"
                        },
                        new
                        {
                            Code = new Guid("46e5e51f-8754-49a9-a8f5-e779a6e5767b"),
                            Area = 80m,
                            Name = "Welding Robot"
                        },
                        new
                        {
                            Code = new Guid("a22f2b7a-3173-4faf-81b7-177ee950d132"),
                            Area = 150m,
                            Name = "Conveyor Belt"
                        },
                        new
                        {
                            Code = new Guid("28a9a8a8-38a7-4a94-973a-adf6e2904ff2"),
                            Area = 100m,
                            Name = "Packaging Machine"
                        });
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StandardAreaForEquipment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Code = new Guid("7f7d4ba0-56e0-4569-a363-191f4cec33a2"),
                            Name = "Factory A - Main Building",
                            StandardAreaForEquipment = 1500m
                        },
                        new
                        {
                            Code = new Guid("818f4e06-f4de-4b4d-af21-2b876e72bec9"),
                            Name = "Factory B - Assembly Line",
                            StandardAreaForEquipment = 2500m
                        },
                        new
                        {
                            Code = new Guid("679ccc15-4f8a-4132-b16f-a0f03890595b"),
                            Name = "Factory C - Packaging Area",
                            StandardAreaForEquipment = 1800m
                        });
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", "ProcessEquipmentType")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProcessEquipmentTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProductionFacilityCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProcessEquipmentType");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
