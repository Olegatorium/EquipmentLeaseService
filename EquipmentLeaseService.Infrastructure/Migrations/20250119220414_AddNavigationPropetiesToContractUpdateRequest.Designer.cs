// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquipmentLeaseService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250119220414_AddNavigationPropetiesToContractUpdateRequest")]
    partial class AddNavigationPropetiesToContractUpdateRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ContractUpdateRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessEquipmentTypeCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionFacilityCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProcessEquipmentTypeCode");

                    b.HasIndex("ProductionFacilityCode");

                    b.ToTable("ContractUpdateRequests");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.Property<Guid>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessEquipmentTypeCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionFacilityCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContractId");

                    b.HasIndex("ProcessEquipmentTypeCode");

                    b.HasIndex("ProductionFacilityCode");

                    b.ToTable("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ProcessEquipmentTypes");

                    b.HasData(
                        new
                        {
                            Code = new Guid("81e4203a-3e2a-4d85-bf17-dd62be88948c"),
                            Area = 120m,
                            Name = "CNC Machine"
                        },
                        new
                        {
                            Code = new Guid("bc54fc1b-ff98-4ac0-b487-b0e34ee911d4"),
                            Area = 80m,
                            Name = "Welding Robot"
                        },
                        new
                        {
                            Code = new Guid("364fdf70-d9cd-4125-866e-8e2906828725"),
                            Area = 150m,
                            Name = "Conveyor Belt"
                        },
                        new
                        {
                            Code = new Guid("2d84919b-6f8b-45ad-85bb-a9e8ac768f69"),
                            Area = 100m,
                            Name = "Packaging Machine"
                        });
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StandardAreaForEquipment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Code = new Guid("d429719b-2f25-4fe3-a682-5255760a2c38"),
                            Name = "Factory A - Main Building",
                            StandardAreaForEquipment = 1500m
                        },
                        new
                        {
                            Code = new Guid("7f3592f1-5ab8-436f-b85d-1f7f7ff46d69"),
                            Name = "Factory B - Assembly Line",
                            StandardAreaForEquipment = 2500m
                        },
                        new
                        {
                            Code = new Guid("9841f87c-52d0-4a32-847d-472df95d4c22"),
                            Name = "Factory C - Packaging Area",
                            StandardAreaForEquipment = 1800m
                        });
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ContractUpdateRequest", b =>
                {
                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", "ProcessEquipmentType")
                        .WithMany()
                        .HasForeignKey("ProcessEquipmentTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany()
                        .HasForeignKey("ProductionFacilityCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessEquipmentType");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", "ProcessEquipmentType")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProcessEquipmentTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProductionFacilityCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProcessEquipmentType");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
