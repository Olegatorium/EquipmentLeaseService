// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquipmentLeaseService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250119205917_AddContractUpdateRequestDBSet")]
    partial class AddContractUpdateRequestDBSet
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ContractUpdateRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProcessEquipmentTypeCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductionFacilityCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ContractUpdateRequests");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.Property<Guid>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ContractDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("EquipmentQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("ProcessEquipmentTypeCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionFacilityCode")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ContractId");

                    b.HasIndex("ProcessEquipmentTypeCode");

                    b.HasIndex("ProductionFacilityCode");

                    b.ToTable("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ProcessEquipmentTypes");

                    b.HasData(
                        new
                        {
                            Code = new Guid("5d5e7550-dfd4-4c7c-9623-734c5f30e722"),
                            Area = 120m,
                            Name = "CNC Machine"
                        },
                        new
                        {
                            Code = new Guid("d651c353-58eb-481c-b6cb-c8aec5b14385"),
                            Area = 80m,
                            Name = "Welding Robot"
                        },
                        new
                        {
                            Code = new Guid("d8ef4355-2d36-4f11-921c-cd055d4685a6"),
                            Area = 150m,
                            Name = "Conveyor Belt"
                        },
                        new
                        {
                            Code = new Guid("e9c7caf8-397d-4e50-a21a-cbf0ff5e4f1f"),
                            Area = 100m,
                            Name = "Packaging Machine"
                        });
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StandardAreaForEquipment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Code = new Guid("bccb72d5-3988-4850-b4e1-00a326c4eef2"),
                            Name = "Factory A - Main Building",
                            StandardAreaForEquipment = 1500m
                        },
                        new
                        {
                            Code = new Guid("b2b19dd3-6e18-44ca-8375-ba87a580a020"),
                            Name = "Factory B - Assembly Line",
                            StandardAreaForEquipment = 2500m
                        },
                        new
                        {
                            Code = new Guid("1ac95ea0-5c25-45a8-966f-843ac7d6374c"),
                            Name = "Factory C - Packaging Area",
                            StandardAreaForEquipment = 1800m
                        });
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.EquipmentPlacementContract", b =>
                {
                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", "ProcessEquipmentType")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProcessEquipmentTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", "ProductionFacility")
                        .WithMany("EquipmentPlacementContracts")
                        .HasForeignKey("ProductionFacilityCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProcessEquipmentType");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProcessEquipmentType", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("EquipmentLeaseService.Core.Domain.Entities.ProductionFacility", b =>
                {
                    b.Navigation("EquipmentPlacementContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
